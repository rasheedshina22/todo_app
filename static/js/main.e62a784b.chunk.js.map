{"version":3,"sources":["components/Navbar.js","components/Todo.js","components/Todos.js","components/AddTodo.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","Todo","id","this","deleteTodo","todo","title","react_router_dom","to","onClick","handleDelete","bind","Component","Todos","todos","length","map","components_Todo","key","AddTodo","state","handleChange","e","_this","setState","target","value","handleSubmit","preventDefault","new_todo","uuid","v4","addGoal","onSubmit","type","placeholder","onChange","name","App","concat","Object","toConsumableArray","deteteTodo","new_todos","filter","components_Navbar","components_AddTodo","components_Todos","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e62a784b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = props => {\r\n  return (\r\n    <div className=\"navbar-fixed\">\r\n      <nav>\r\n        <div className=\"nav-wrapper\">\r\n          <a href=\"#!\" className=\"brand-logo\">\r\n            Todo\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Todo extends Component {\r\n\thandleDelete(id) {\r\n\t\tthis.props.deleteTodo(id);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { todo } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ul className=\"collection\">\r\n\t\t\t\t\t<li className=\"collection-item\">\r\n\t\t\t\t\t\t{todo.title}\r\n\t\t\t\t\t\t<Link to=\"/\" className=\"secondary-content\">\r\n\t\t\t\t\t\t\t<i className=\"material-icons edit\">edit</i>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to=\"/\" className=\"secondary-content\">\r\n\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\tonClick={this.handleDelete.bind(this, todo.id)}\r\n\t\t\t\t\t\t\t\tclassName=\"material-icons delete\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tdelete\r\n\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTodo.propTypes = {\r\n\ttodo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst Todos = props => {\r\n\tconst { todos, deleteTodo } = props;\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{todos.length !== 0 ? (\r\n\t\t\t\ttodos.map(todo => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Todo\r\n\t\t\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\t\tdeleteTodo={deleteTodo}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t) : (\r\n\t\t\t\t<h2>You dont have anymore todos </h2>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nTodos.propTypes = {\r\n\ttodos: PropTypes.array.isRequired,\r\n\tdeleteGoal: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\nimport uuid from \"uuid\";\r\n\r\nclass AddTodo extends Component {\r\n\tstate = {\r\n\t\ttitle: \"\"\r\n\t};\r\n\r\n\thandleChange = e => {\r\n\t\tthis.setState({ title: e.target.value });\r\n\t};\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tconst new_todo = {\r\n\t\t\tid: uuid.v4(),\r\n\t\t\ttitle: this.state.title\r\n\t\t};\r\n\t\tthis.props.addGoal(new_todo);\r\n\t\tthis.setState({ title: \"\" });\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<form className=\"col s12\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"input-field s6\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter goal for the Year...\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tvalue=\"Add a Todo\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddTodo;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Todos from \"./components/Todos\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport AddTodo from \"./components/AddTodo\";\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\ttodos: [\r\n\t\t\t{ id: 1, title: \"read 50 books this year\" },\r\n\t\t\t{ id: 2, title: \"master react this year\" },\r\n\t\t\t{ id: 3, title: \"master Node and Express this year\" },\r\n\t\t]\r\n\t};\r\n\r\n\tAddTodo = new_todo => {\r\n\t\tconst todos = [...this.state.todos, new_todo];\r\n\t\tthis.setState({ todos: todos });\r\n\t};\r\n\r\n\tdeteteTodo = id => {\r\n\t\tconst new_todos = this.state.todos.filter(todo => todo.id !== id);\r\n\t\tthis.setState({ todos: new_todos });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t<AddTodo addGoal={this.AddTodo} />\r\n\t\t\t\t\t<Todos\r\n\t\t\t\t\t\ttodos={this.state.todos}\r\n\t\t\t\t\t\tdeleteTodo={this.deteteTodo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}